<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:property-placeholder location="classpath:database/config/database.properties"/>
	
	<!-- mybatis 사용하기 위해 객체 생성 -->
	<!-- 1. DB연결 : Connection -->
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		<property name="username" value="${oracle.user}"></property>
		<property name="password" value="${oracle.password}"></property>
		<property name="url" value="${oracle.url}"></property>
		<property name="driverClassName" value="${oracle.driver}"></property>
	</bean>
	
	<!-- 2. DB와 Mappers를 가진 객체(bean) 생성 -->
	<!-- Connection, sql문이 있는 xml파일(Mapper)의 위치, config 파일의 위치를 알려줌 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- .war(배포)했을 시 com.iu.main 및 하위페이지 위치는 
			tomcat > webapps > 파일 > WEB-INF > classes 생성 됨
			그래서 경로를 classpath(classes)부터 시작
		  -->
		
		<!-- config, mapper 위치 설정 -->
		<property name="configLocation" value="classpath:database/config/mybatisConfig.xml"></property>
		<property name="mapperLocations" value="classpath:database/mappers/*Mapper.xml"></property>
	</bean>
	
	<!-- 3. 2번에 생성된 객체를 가져옴 -->
	<!-- DB연결, Mapper 위치 확인 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>
</beans>
