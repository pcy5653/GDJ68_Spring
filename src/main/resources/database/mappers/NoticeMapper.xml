<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.iu.main.board.notice.NoticeDAO">
  <!-- #{} : 꺼내올 getter의 이름 -->
  
  		<sql id="searchSql">
  			WHERE NOTICENUM>0
			AND
				<choose>
					<when test="kind == 'name'">
						NOTICENAME LIKE #{search}
					</when>
					<when test="kind == 'title'">
						NOTICETITLE LIKE #{search}
					</when>
					<otherwise>
						NOTICECONTENTS LIKE #{search}
					</otherwise>
				</choose>
  		</sql>
  
  
  		<select id="getList" resultMap="getSelectResult" parameterType="com.iu.main.util.Pager">
  			SELECT * FROM 
				(SELECT ROWNUM R, B.* FROM
					(
							SELECT * FROM NOTICE 
							<include refid="searchSql"></include>
							ORDER BY NOTICENUM ASC
					) B
				)
			WHERE R BETWEEN ${startRow} AND ${lastRow}
  		</select>
  		
  		<resultMap type="NoticeDTO" id="getSelectResult">
  			<id column = "NOTICENUM" property="num"/>
  			<result column="NOTICENAME" property="name"/>
 			<result column="NOTICETITLE" property="subject"/>		
 			<result column="NOTICECONTENTS" property="contents"/>	
 			<result column="NOTICEDATE" property="createDate"/>	
 			<result column="NOTICEHIT" property="hit"/>
  		</resultMap>
  		
  		
  		<!-- total -->
  		<select id="getTotal" resultType="Long">
  			SELECT COUNT(NOTICENUM) FROM NOTICE
  			<include refid="searchSql"></include>
  		</select>
  		
  		
  		<!-- notice의 번호와 noticefile을 join하여 해당 번호의 파일들을 가져온다/ -->
  		<select id="getDetail" parameterType="NoticeDTO" resultMap="getDetailResult">	
  			SELECT N.*, NF.*
  			FROM NOTICE N
  			LEFT OUTER JOIN
  			NOTICEFILE NF
  			ON(N.NOTICENUM = NF.NOTICENUM)
  			WHERE N.NOTICENUM=#{num}
  		</select>
  		<resultMap type="NoticeDTO" id="getDetailResult">
  			<id column = "NOTICENUM" property="num"/>
  			<result column="NOTICENAME" property="name"/>
 			<result column="NOTICETITLE" property="subject"/>		
 			<result column="NOTICECONTENTS" property="contents"/>	
 			<result column="NOTICEDATE" property="createDate"/>	
 			<result column="NOTICEHIT" property="hit"/>	
 			
 			<!-- N개의 noticefileDTO -->
			<collection property="fileDTOs" javaType="List" ofType="NoticeFileDTO">
				<id column="FILENUM" property="fileNum"/>
				<result column="FILENAME" property="fileName"/>
				<result column="ORIGINALNAME" property="originalName"/>
			</collection>
  		</resultMap>
  		
  		
  		
  		
  		<insert id="setAdd" parameterType="NoticeDTO">
  			<selectKey keyProperty="num" resultType="Long" order="BEFORE">
  				SELECT NOTICE_SEQ.NEXTVAL FROM DUAL
  			</selectKey>
  			INSERT INTO NOTICE 
  			VALUES (#{num}, #{name}, #{subject}, #{contents}, SYSDATE ,0)
  		</insert>
  		
  		<insert id="setFileAdd" parameterType="NoticeFileDTO">
  			INSERT INTO NOTICEFILE (FILENUM, NOTICENUM, FILENAME, ORIGINALNAME)
  			VALUES (NF_SEQ.NEXTVAL, #{noticeNum}, #{fileName}, #{originalName})
  		</insert>
  		
  		
  		
  		<update id="setUpdate" parameterType="NoticeDTO">
  			UPDATE NOTICE
  			SET NOTICETITLE=#{subject}, NOTICECONTENTS=#{contents}
  			WHERE NOTICENUM=#{num}
  		</update>
  		
  		<!-- 수정 중 파일 삭제 -->
  		<!-- 1. fileNum으로 fileName을 조회하기 -->
  		<select id="getFileDetail" parameterType="NoticeFileDTO" resultType="NoticeFileDTO">
  			SELECT FILENUM, FILENAME FROM NOTICEFILE WHERE FILENUM =#{fileNum}
  		</select>
  		
  		<!-- 2. DB 삭제 -->
  		<delete id="setFileDelete" parameterType="NoticeFileDTO">
  			DELETE NOTICEFILE WHERE FILENUM =#{fileNum}
  		</delete>
  		
  		
  		
  		<delete id="setDelete" parameterType="NoticeDTO">
  			DELETE NOTICE WHERE NOTICENUM=#{num}
  		</delete>
  </mapper>
