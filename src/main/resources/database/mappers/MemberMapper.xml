<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.iu.main.member.MemberDAO">
  <!-- 1. #{} = getter의 이름 
  	   2. property = setter의 이름
  	   -->
  
  

  <!-- 로그인 -->
  <!-- paraneterType을 풀패키지가 아닌 Config에 alies로 축약하여 alies명을 작성 -->
  <!-- Member와 MemberFile의 정보를 가져오기 -->
  <!-- resultType으로 반환티입 지정해서 아래의 resultMap에서 실행 -->
  <select id="getLogin" parameterType="MemberDTO" resultMap="getLoginResult">
  		SELECT M.* , MF.*, R.* 
  		FROM MEMBER M
  			LEFT OUTER JOIN
  			MEMBERFILE MF
  			ON(M.ID = MF.ID)
  			<!-- roleNum, roleName 을 가져오기 
  			    1. MEMBER와 MEMBERROLE JOIN
  				1개 이상은 무조건 갖고 잇으니 INNER JOIN-->
  			INNER JOIN
  			MEMBERROLE MR
  			ON(M.ID = MR.ID)
  			<!-- 2. MEMBERROLE과 ROLE JOIN -->
  			INNER JOIN 
  			ROLE R
  			ON(R.ROLENUM = MR.NUM)
  		WHERE M.ID=#{id} AND M.PW=#{pw}
  </select>
  
  <!-- Mypage의 파일 경로 -->
  <resultMap type="MemberDTO" id="getLoginResult">  <!-- property = setter의 이름 -->
  	<id column="ID" property="id"/>		<!-- Member의 id & MemberFile의 id 동일, 1개 작성 -->
  	<result column="PW" property="pw"/>
  	<result column="NAME" property="name"/>
  	<result column="EMAIL" property="email"/>
  	<result column="BIRTH" property="birth"/>
  	
  	<!-- 1:1관계
  	 -> association으로 member에 memberfileDTO 객체선언한 안의 내용 보기(memberfileDTO Mapping) -->
  	<association property="memberFileDTO" javaType="MemberFileDTO">
  		<result column="FILENUM" property="fileNum"/>
  		<result column="FILENAME" property="fileName"/>
  		<result column="ORIGINALNAME" property="originalName"/>
  	</association>
  	
  	<!-- 1:N 관계 
  	    MemberDTO에 RoleDTO를 List로 받음
  		1. property : setter의 이름
  		2. javaType : property의 타입
  		3. ofType : 원래의 타입-->
  	<collection property="roles" javaType="List" ofType="RoleDTO">
  		<id column="ROLENUM" property="roleNum"/>
  		<result column="ROLENAME" property="roleName"/> 
  	</collection>
  </resultMap>
  
  <!-- 회원수정 -->
  <update id="setMemberUpdate" parameterType="MemberDTO">
  		UPDATE MEMBER SET
  		PW=#{pw}, NAME=#{name}, EMAIL=#{email}, BIRTH=#{birth}
  		WHERE ID=#{id}
  </update>
  
    <!-- join 회원가입 -->
  <insert id="setJoin" parameterType="MemberDTO">
  	INSERT INTO MEMBER (ID, PW, NAME, EMAIL, BIRTH) 
  	VALUES (#{id}, #{pw}, #{name}, #{email}, #{birth})
  </insert>
  
  <!-- join 회원가입 ID 중복 확인 -->
  <select id="getIdCheck" parameterType="MemberDTO" resultType="MemberDTO">
  	SELECT ID FROM MEMBER
  	WHERE ID = #{id}
  </select>
  
  <!-- 회원가입시 파일join -->
  <insert id="setFileJoin" parameterType="MemberFileDTO">
  	INSERT INTO MEMBERFILE (FILENUM, ID, FILENAME, ORIGINALNAME)
  	VALUES (MF_SEQ.NEXTVAL, #{id}, #{fileName}, #{originalName})
  </insert>
  
  </mapper>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  